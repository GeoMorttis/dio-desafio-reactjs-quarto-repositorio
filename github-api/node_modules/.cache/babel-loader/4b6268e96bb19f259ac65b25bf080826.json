{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\dio-desafio-reactjs-quarto-repositorio\\\\github-api\\\\src\\\\components\\\\repositories\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport RepositoryItem from '../repository-item';\nimport * as S from './styled';\nimport useGithub from '../hooks/github-hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Repositories = () => {\n  _s();\n\n  const {\n    githubState,\n    getUserRepos,\n    getUserStarred\n  } = useGithub();\n  const [hasUserForSearchrepos, setHasUserForSearchrepos] = useState(false);\n  useEffect(() => {\n    if (githubState.user.login) {\n      getUserRepos(githubState.user.login);\n      getUserStarred(githubState.user.login);\n    }\n\n    setHasUserForSearchrepos(githubState.repositories);\n  }, [githubState.user.login]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: hasUserForSearchrepos ? /*#__PURE__*/_jsxDEV(S.WrapperTabs, {\n      selectedTabClassName: \"is-selected\",\n      selectedTabPanelClassName: \"is-selected\",\n      children: [/*#__PURE__*/_jsxDEV(S.WrapperTabList, {\n        children: [/*#__PURE__*/_jsxDEV(S.WrapperTab, {\n          children: \"Repositories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(S.WrapperTab, {\n          children: \"Starred\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(S.WrapperTabPanel, {\n        children: /*#__PURE__*/_jsxDEV(S.WrapperList, {\n          children: githubState.repositories.map(item => /*#__PURE__*/_jsxDEV(RepositoryItem, {\n            name: item.name,\n            linkToRepo: item.full_name,\n            fullName: item.full_name\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(S.WrapperTabPanel, {\n        children: /*#__PURE__*/_jsxDEV(S.WrapperList, {\n          children: githubState.starred.map(item => /*#__PURE__*/_jsxDEV(RepositoryItem, {\n            name: item.name,\n            linkToRepo: item.html_url,\n            fullName: item.full_name\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false);\n};\n\n_s(Repositories, \"HUekbS3Sx74zxrH/ARJ8XlhyL7g=\", false, function () {\n  return [useGithub];\n});\n\n_c = Repositories;\nexport default Repositories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repositories\");","map":{"version":3,"names":["React","useEffect","useState","RepositoryItem","S","useGithub","Repositories","githubState","getUserRepos","getUserStarred","hasUserForSearchrepos","setHasUserForSearchrepos","user","login","repositories","map","item","name","full_name","id","starred","html_url"],"sources":["C:/workspace/dio-desafio-reactjs-quarto-repositorio/github-api/src/components/repositories/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport RepositoryItem from '../repository-item';\r\nimport * as S from './styled';\r\nimport useGithub from '../hooks/github-hooks';\r\n\r\nconst Repositories = () => {\r\n    const { githubState, getUserRepos, getUserStarred } = useGithub();\r\n    const [hasUserForSearchrepos, setHasUserForSearchrepos] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (githubState.user.login) {\r\n          getUserRepos(githubState.user.login);\r\n          getUserStarred(githubState.user.login);\r\n        }\r\n        setHasUserForSearchrepos(githubState.repositories);\r\n    \r\n      }, [githubState.user.login]);\r\n\r\n      return (\r\n        <>\r\n          {hasUserForSearchrepos ? (\r\n            <S.WrapperTabs\r\n              selectedTabClassName=\"is-selected\"\r\n              selectedTabPanelClassName=\"is-selected\"\r\n            >\r\n              <S.WrapperTabList>\r\n                <S.WrapperTab>Repositories</S.WrapperTab>\r\n                <S.WrapperTab>Starred</S.WrapperTab>\r\n              </S.WrapperTabList>\r\n              <S.WrapperTabPanel>\r\n                <S.WrapperList>\r\n                  {githubState.repositories.map((item) => (\r\n                    <RepositoryItem\r\n                      key={item.id}\r\n                      name={item.name}\r\n                      linkToRepo={item.full_name}\r\n                      fullName={item.full_name}\r\n                    />\r\n                  ))}\r\n                </S.WrapperList>\r\n              </S.WrapperTabPanel>\r\n              <S.WrapperTabPanel>\r\n                <S.WrapperList>\r\n                  {githubState.starred.map((item) => (\r\n                    <RepositoryItem\r\n                      key={item.id}\r\n                      name={item.name}\r\n                      linkToRepo={item.html_url}\r\n                      fullName={item.full_name}\r\n                    />\r\n                  ))}\r\n                </S.WrapperList>\r\n              </S.WrapperTabPanel>\r\n            </S.WrapperTabs>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </>\r\n      );\r\n    };\r\n    \r\nexport default Repositories;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EACvB,MAAM;IAAEC,WAAF;IAAeC,YAAf;IAA6BC;EAA7B,IAAgDJ,SAAS,EAA/D;EACA,MAAM,CAACK,qBAAD,EAAwBC,wBAAxB,IAAoDT,QAAQ,CAAC,KAAD,CAAlE;EAEAD,SAAS,CAAC,MAAM;IACZ,IAAIM,WAAW,CAACK,IAAZ,CAAiBC,KAArB,EAA4B;MAC1BL,YAAY,CAACD,WAAW,CAACK,IAAZ,CAAiBC,KAAlB,CAAZ;MACAJ,cAAc,CAACF,WAAW,CAACK,IAAZ,CAAiBC,KAAlB,CAAd;IACD;;IACDF,wBAAwB,CAACJ,WAAW,CAACO,YAAb,CAAxB;EAED,CAPM,EAOJ,CAACP,WAAW,CAACK,IAAZ,CAAiBC,KAAlB,CAPI,CAAT;EASE,oBACE;IAAA,UACGH,qBAAqB,gBACpB,QAAC,CAAD,CAAG,WAAH;MACE,oBAAoB,EAAC,aADvB;MAEE,yBAAyB,EAAC,aAF5B;MAAA,wBAIE,QAAC,CAAD,CAAG,cAAH;QAAA,wBACE,QAAC,CAAD,CAAG,UAAH;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,CAAD,CAAG,UAAH;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAQE,QAAC,CAAD,CAAG,eAAH;QAAA,uBACE,QAAC,CAAD,CAAG,WAAH;UAAA,UACGH,WAAW,CAACO,YAAZ,CAAyBC,GAAzB,CAA8BC,IAAD,iBAC5B,QAAC,cAAD;YAEE,IAAI,EAAEA,IAAI,CAACC,IAFb;YAGE,UAAU,EAAED,IAAI,CAACE,SAHnB;YAIE,QAAQ,EAAEF,IAAI,CAACE;UAJjB,GACOF,IAAI,CAACG,EADZ;YAAA;YAAA;YAAA;UAAA,QADD;QADH;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QARF,eAoBE,QAAC,CAAD,CAAG,eAAH;QAAA,uBACE,QAAC,CAAD,CAAG,WAAH;UAAA,UACGZ,WAAW,CAACa,OAAZ,CAAoBL,GAApB,CAAyBC,IAAD,iBACvB,QAAC,cAAD;YAEE,IAAI,EAAEA,IAAI,CAACC,IAFb;YAGE,UAAU,EAAED,IAAI,CAACK,QAHnB;YAIE,QAAQ,EAAEL,IAAI,CAACE;UAJjB,GACOF,IAAI,CAACG,EADZ;YAAA;YAAA;YAAA;UAAA,QADD;QADH;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QApBF;IAAA;MAAA;MAAA;MAAA;IAAA,QADoB,gBAmCpB;EApCJ,iBADF;AAyCD,CAtDL;;GAAMb,Y;UACoDD,S;;;KADpDC,Y;AAwDN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}